{"version":3,"sources":["firebase/config.js","api/reloadPage.js","api/insert.js","redux/slice/roomSlice.js","components/home/message/BodyMessage.jsx","redux/slice/modalSlice.js","components/home/message/HeaderMessage.jsx","components/home/message/index.jsx","api/get.js","components/home/navbar/ChatRoom.jsx","redux/slice/themeSlice.js","components/home/navbar/HeaderNavbar.jsx","components/home/navbar/Setting.jsx","components/home/navbar/index.jsx","pages/Home.jsx","assets/logo.png","components/login/HeaderLogin.jsx","assets/author.gif","components/login/LoginButton.jsx","routes/index.jsx","pages/Login.jsx","redux/slice/userSlice.js","redux/slice/messageSlice.js","redux/rootReducer.js","redux/store.js","components/common/modal/CreateRoomModal.jsx","api/update.js","components/common/modal/InviteModal.jsx","components/common/modal/RootModal.jsx","components/common/Loading.jsx","App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","db","getFirestore","a","setPersistence","browserLocalPersistence","getAnalytics","firebase","reload","currentUser","localStorage","clear","window","location","insertRoom","data","displayName","email","phoneNumber","photoURL","uid","infoUser","addDoc","collection","photo","members","messages","info_member","created_at","serverTimestamp","status","error","insertMessage","room","message","convertMess","Array","from","push","id","Date","getTime","user","console","log","updateDoc","doc","insertUser","keywords","generateKeywords","name","split","filter","word","length","flagArray","result","stringArray","i","findPermutation","k","join","reduce","acc","cur","words","arrName","curName","forEach","letter","toUpperCase","createKeywords","roomSlice","createSlice","initialState","currentRoom","listRoom","reducers","state","payload","actions","setCurrentRoom","setListRoom","resetRoom","WrapRow","styled","Row","props","theme","light","dark","BodyMessage","useSelector","themeReducer","dispatch","useDispatch","handleSendMessage","txt","text","trim","onSnapshot","docs","getDate","time","getYear","getFullYear","getMonth","getHours","getMinutes","getSeconds","handleTime","times","Y","M","D","h","m","s","justify","align","span","style","height","map","mess","direction","sender","as","src","charAt","Messages","model","Footer","sentTime","formatDistanceToNow","addSuffix","includeSeconds","onSend","placeholder","attachButton","modalSlice","isOpen","isOpenInvite","setIsOpenModalTrue","setIsOpenModalFalse","setIsOpenInviteTrue","setIsOpenInviteFalse","ConversationHeaderWrap","ConversationHeader","HeaderMessage","roomReducer","useEffect","unsubcribe","Back","onClick","innerWidth","setState","size","room_name","Content","userName","info","description","Actions","icon","shape","Group","maxCount","Wrap","Message","offsetTop","showIcon","type","closable","getListRoom","condition","query","where","getDocs","Object","assign","getUser","keyword","userCollection","orderBy","getInfoUser","q","Container","div","Room","marginRight","ChatRoom","func","getRooms","subcribe","themeSlice","background","color","loading","setTheme","setLoadingTrue","setLoadingFalse","CreateRoomButton","title","PlusOutlined","WrapMenu","Menu","themecus","MenuDrop","Item","borderRadius","SettingOutlined","Text","FireOutlined","checked","setIsDisplay","CusDropDown","useState","isDisplay","overlay","placement","visible","Icon","fontSize","component","CloseOutlined","MenuOutlined","HeaderNavbar","HeaderSettingWrap","HeaderSetting","ArrowLeftOutlined","Title","level","FormBodySetting","labelCol","wrapperCol","label","rules","require","disabled","defaultValue","BodySettingWrap","BodySetting","history","useHistory","userReducer","slice","marginLeft","margin","marginTop","block","signOut","then","LogoutOutlined","Setting","Navbar","AnimatePresence","exitBeforeEnter","motion","initial","x","animate","exit","opacity","Home","width","addEventListener","transition","duration","delay","lg","md","xxl","HeaderLogin","logo","alt","LoginButton","handleFbButton","fbProvider","FacebookAuthProvider","signInWithPopup","res","createdAt","metadata","lastLoginAt","alert","ghost","GoogleOutlined","danger","FacebookFilled","author","routesArray","path","Routes","useLayoutEffect","onAuthStateChanged","exact","userSlice","isLogin","setIsLoginTrue","setIsLoginFalse","messageSlice","currentMessage","setMessage","resetMessage","rootReducer","combineReducers","modalReducer","messageReducer","store","configureStore","reducer","ModalWrap","Modal","CreateRoomModal","Form","useForm","form","setLoading","onOk","getFieldValue","notification","onCancel","confirmLoading","required","TextArea","updateMember","memberNew","setStatus","val","infoMemberOld","memberOld","indexOf","InviteModal","value","userValue","setUserValue","debounceFunc","useCallback","debounce","resultArr","mode","onBlur","allowClear","onChange","onSearch","searchValue","notFoundContent","options","RootModal","LoadingStyled","Loading","className","WrapContainer","listUser","App","basename","pathname","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83f99674.chunk.js","sourcesContent":["import {getAuth, connectAuthEmulator, setPersistence, browserLocalPersistence} from \"firebase/auth\"\nimport { getFirestore, connectFirestoreEmulator } from \"firebase/firestore\"\nimport firebase from \"firebase/compat/app\"\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCy9Q5bRqojCmB8OWmb3hCeUX4IePejfvY\",\n  authDomain: \"chat-app-demo-ca0b4.firebaseapp.com\",\n  projectId: \"chat-app-demo-ca0b4\",\n  storageBucket: \"chat-app-demo-ca0b4.appspot.com\",\n  messagingSenderId: \"980695992241\",\n  appId: \"1:980695992241:web:531116cf3aaced29fe5f90\",\n  measurementId: \"G-1N8M101L34\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst db = getFirestore(app);\n\n// set persist auth\n(async () => {\n    setPersistence(auth, browserLocalPersistence)\n}) ()\n getAnalytics(app)\n \n// connectAuthEmulator(auth, \"http://localhost:9099\");\n// connectFirestoreEmulator(db, \"localhost\", \"8080\")\n\nexport {auth, db}\nexport default firebase;","import { auth } from \"../firebase/config\";\n\nconst reload = () => {\n    if(!auth.currentUser){\n        localStorage.clear()\n        window.location.reload()\n        return;\n    }\n}\n\nexport default reload","import {\n\tcollection,\n\tupdateDoc,\n\taddDoc,\n\tdoc,\n\tserverTimestamp,\n} from \"@firebase/firestore\";\nimport { db } from \"../firebase/config\";\nimport { auth } from \"../firebase/config\";\nimport reload from \"./reloadPage\";\n\nexport const insertRoom = async (data) => {\n\treload();\n\tconst { displayName, email, phoneNumber, photoURL, uid } = auth.currentUser;\n\tconst infoUser = {\n\t\tdisplayName,\n\t\temail,\n\t\tphoneNumber,\n\t\tphotoURL,\n\t\tuid,\n\t};\n\ttry {\n\t\tawait addDoc(collection(db, \"rooms\"), {\n\t\t\t...data,\n\t\t\tphoto: \"\",\n\t\t\tmembers: [uid],\n\t\t\tmessages: [],\n\t\t\tinfo_member: [{ infoUser }],\n\t\t\tcreated_at: serverTimestamp(),\n\t\t});\n\t\treturn { status: true };\n\t} catch (error) {\n\t\treturn { error, status: false };\n\t}\n};\n\nexport const insertMessage = async (room, message) => {\n\treload();\n\tconst convertMess = Array.from(room.messages);\n\tconvertMess.push({\n\t\tid: room.id,\n\t\tmessage,\n\t\tcreated_at: (new Date()).getTime(),\n\t\tuser: {\n\t\t\tid: auth.currentUser.uid,\n\t\t\tdisplayName: auth.currentUser.displayName,\n\t\t\tphotoURL: auth.currentUser.photoURL,\n\t\t},\n\t});\n\ttry {\n        console.log(room.id);\n\t\tawait updateDoc(doc(collection(db, \"rooms\"), room.id), {\n\t\t\tmessages: convertMess,\n\t\t});\n\t\treturn { status: true };\n\t} catch (error) {\n\t\tconsole.log(error);\n\t\treturn { error, status: false };\n\t}\n};\n\nexport const insertUser = async () => {\n  reload();\n  try{\n\t\tawait addDoc(collection(db, \"users\"), {\n\t\t  displayName: auth.currentUser.displayName,\n\t\t  photoURL: auth.currentUser.photoURL,\n\t\t  email: auth.currentUser.email,\n\t\t  phoneNumber: auth.currentUser.phoneNumber,\n\t\t  uid: auth.currentUser.uid,\n\t\t\tkeywords: generateKeywords(auth.currentUser.displayName),\n\t\t\tcreated_at: serverTimestamp(),\n\t\t});\n\t\treturn { status: true };\n  }catch(error) {\n    console.log(error)\n    return {status: false, error}\n  }\n}\n\nconst generateKeywords = (displayName) => {\n  // liet ke tat cac hoan vi. vd: name = [\"David\", \"Van\", \"Teo\"]\n  // => [\"David\", \"Van\", \"Teo\"], [\"David\", \"Teo\", \"Van\"], [\"Teo\", \"David\", \"Van\"],...\n  const name = displayName.split(' ').filter((word) => word);\n  const length = name.length;\n  let flagArray = [];\n  let result = [];\n  let stringArray = [];\n  /**\n   * khoi tao mang flag false\n   * dung de danh dau xem gia tri\n   * tai vi tri nay da duoc su dung\n   * hay chua\n   **/\n  for (let i = 0; i < length; i++) {\n    flagArray[i] = false;\n  }\n  const createKeywords = (name) => {\n    const arrName = [];\n    let curName = '';\n    name.split('').forEach((letter) => {\n      curName += letter;\n      arrName.push(curName.toUpperCase());\n    });\n    return arrName;\n  };\n  function findPermutation(k) {\n    for (let i = 0; i < length; i++) {\n      if (!flagArray[i]) {\n        flagArray[i] = true;\n        result[k] = name[i];\n        if (k === length - 1) {\n          stringArray.push(result.join(' '));\n        }\n        findPermutation(k + 1);\n        flagArray[i] = false;\n      }\n    }\n  }\n  findPermutation(0);\n  const keywords = stringArray.reduce((acc, cur) => {\n    const words = createKeywords(cur);\n    return [...acc, ...words];\n  }, []);\n  return keywords;\n};","import {createSlice} from \"@reduxjs/toolkit\"\n\nconst initialState = {\n    currentRoom: null,\n    listRoom: null\n}\n\nconst roomSlice = createSlice({\n    name: 'room',\n    initialState,\n    reducers: {\n        \"setCurrentRoom\": (state, payload) => {\n            state.currentRoom = payload.payload\n        },\n        \"setListRoom\": (state, payload) => {\n            state.listRoom = payload.payload\n        },\n        \"resetRoom\": state => {\n            state.currentRoom = null\n        }\n    }\n})\n\nexport const {setCurrentRoom, setListRoom, resetRoom} = roomSlice.actions\nexport default roomSlice.reducer","import {Col, Row, Avatar } from \"antd\";\nimport { useDispatch, useSelector} from \"react-redux\";\nimport styled from \"styled-components\";\nimport { onSnapshot, doc } from \"firebase/firestore\";\nimport { MessageInput, MessageGroup, Message, ChatContainer, MessageList } from '@chatscope/chat-ui-kit-react'\nimport { db,auth } from \"../../../firebase/config\";\nimport { insertMessage } from \"../../../api/insert\";\nimport { setCurrentRoom } from \"../../../redux/slice/roomSlice\";\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow'\n\nconst WrapRow = styled(Row)`\n\tmax-width: 650px;\n\twidth: 100%;\n\tpadding: 10px;\n  .cs-message{\n    &-list, &-input, &__sent-time{\n      ${props => props.theme.theme ? props.theme.light : props.theme.dark}\n    }\n  }\n`;\n\nconst BodyMessage = (props) => {\n  const theme = useSelector(state => state.themeReducer)\n\tconst message = props.messages;\n\tconst dispatch = useDispatch();\n\tconst handleSendMessage = async (txt) => {\n\t  if(!txt) return;\n\t  const text = txt.trim()\n\t\tconst res = await insertMessage(props, text);\n\t\tif (res.status) {\n\t\t\tonSnapshot(doc(db, \"rooms\", props.id), (docs) => {\n\t\t\t\tdispatch(setCurrentRoom({ ...docs.data(), id: docs.id }));\n\t\t\t});\n\t\t}\n\t};\n\tconst getDate = time => time.getDate()\n\tconst getYear = time => time.getFullYear()\n\tconst getMonth = time => time.getMonth()\n\tconst getHours = time => time.getHours()\n\tconst getMinutes = time => time.getMinutes()\n\tconst getSeconds = time => time.getSeconds()\n\tconst handleTime = time => {\n\t  const times = new Date(time)\n\t  return {\n\t    Y: getYear(times),\n\t    M: getMonth(times),\n\t    D: getDate(times),\n\t    h: getHours(times),\n\t    m: getMinutes(times),\n\t    s: getSeconds(times),\n\t  }\n\t}\n\treturn (\n\t\t<Row justify=\"center\">\n\t\t\t<WrapRow align=\"center\" theme={theme}>\n\t\t\t\t<Col span={24}>\n      \t\t<ChatContainer style={{height: \"80vh\"}}>\n      \t\t  <MessageList>\n      \t\t\t{ message && message.map((mess) => (\n      \t\t\t  <MessageGroup direction={ auth.currentUser.uid === mess.user.id ? \"outgoing\" : \"incoming\" } sender={mess.user.displayName}>\n      \t\t\t    <Avatar as=\"Avatar\" src={mess.user.photoURL}>\n      \t\t\t    {mess.user.displayName?.charAt(0)?.toUpperCase()}\n      \t\t\t    </Avatar>\n      \t\t\t    <MessageGroup.Messages>\n      \t\t\t      <Message model = {{ message: mess.message}}/>\n      \t\t\t      <Message.Footer sentTime={\n      \t\t\t        formatDistanceToNow(new Date(handleTime(mess.created_at).Y, handleTime(mess.created_at).M, handleTime(mess.created_at).D, handleTime(mess.created_at).h, handleTime(mess.created_at).m, handleTime(mess.created_at).s), {addSuffix: true, includeSeconds: true})\n      \t\t\t      }\n      \t\t\t       />\n      \t\t\t    </MessageGroup.Messages>\n      \t\t\t  </MessageGroup>\n      \t\t\t  ))}\n      \t\t  </MessageList>\n        \t\t<MessageInput onSend={handleSendMessage} placeholder=\"Type message here...\" attachButton={false} />\n      \t\t</ChatContainer>\n\t\t\t\t</Col>\n\t\t\t</WrapRow>\n\t\t</Row>\n\t);\n};\n\nexport default BodyMessage;\n","import {createSlice} from \"@reduxjs/toolkit\"\n\nconst initialState = {\n  isOpen: false,\n  isOpenInvite: false\n}\n\nconst modalSlice = createSlice({\n  name: \"modal\",\n  initialState,\n  reducers: {\n    setIsOpenModalTrue: state => {\n      state.isOpen = true\n    },\n    setIsOpenModalFalse: state => {\n      state.isOpen = false\n    },\n    setIsOpenInviteTrue: state => {\n      state.isOpenInvite = true\n    },\n    setIsOpenInviteFalse: state => {\n      state.isOpenInvite = false\n    },\n  }\n})\n\nexport const {setIsOpenModalFalse, setIsOpenModalTrue, setIsOpenInviteFalse, setIsOpenInviteTrue} = modalSlice.actions\nexport default modalSlice.reducer","import { useEffect } from \"react\";\nimport { Avatar, Button } from \"antd\";\nimport {doc, onSnapshot} from \"firebase/firestore\"\nimport { ConversationHeader} from '@chatscope/chat-ui-kit-react';\nimport {useDispatch, useSelector} from \"react-redux\"\nimport {AiOutlineUsergroupAdd} from \"react-icons/ai\"\nimport styled from \"styled-components\"\nimport {resetRoom, setCurrentRoom} from \"../../../redux/slice/roomSlice\"\nimport {setIsOpenInviteTrue} from \"../../../redux/slice/modalSlice\"\nimport {db} from \"../../../firebase/config\"\n\nconst ConversationHeaderWrap= styled(ConversationHeader)`\n   ${props => props.theme.theme ? props.theme.light : props.theme.dark}\n   .cs-conversation-header{\n     &__user-name, &__info{\n      ${props => props.theme.theme ? props.theme.light : props.theme.dark}\n     }\n   }\n`\n\nconst HeaderMessage = (props) => {\n  const dispatch = useDispatch()\n  const {id} = useSelector(state => state.roomReducer.currentRoom)\n  const theme = useSelector(state => state.themeReducer)\n  const handleExitChat = () => {\n    if(window.innerWidth < 576 ) props.setState(0);\n    dispatch(resetRoom())\n  }\n  useEffect(() => {\n    const unsubcribe = onSnapshot(doc(db, \"rooms\", props.id), docs=> {\n      dispatch(setCurrentRoom({...docs.data(), id} ))\n    })\n    return () => unsubcribe()\n  },[ dispatch, id, props])\n\treturn (\n\t\t<ConversationHeaderWrap theme={theme}>\n\t    <ConversationHeader.Back onClick={handleExitChat}/>\n  \t    <Avatar as=\"Avatar\" size='large' src={props.photo}>\n  \t\t\t\t{props?.room_name?.charAt(0)?.toUpperCase()}\n  \t    </Avatar>\n\t    <ConversationHeader.Content userName={props.room_name} info= {props.description} />\n\t    <ConversationHeader.Actions>\n\t    <Button icon={<AiOutlineUsergroupAdd />} size=\"large\" shape=\"circle\" as='Avatar' onClick={() => dispatch(setIsOpenInviteTrue())}/>\n\t      <Avatar.Group as=\"Avatar\" maxCount={2}>\n\t      {\n\t        props.info_member.map((info,id) => (\n\t        <Avatar key={id} src={info.infoUser.photoURL} size='large'>\n\t          {info.infoUser.displayName?.charAt(0)?.toUpperCase()}\n\t        </Avatar>\n\t       ))\n\t      }\n\t      </Avatar.Group>\n\t    </ConversationHeader.Actions>\n\t\t</ConversationHeaderWrap>\n\t);\n};\n\nexport default HeaderMessage;\n","import { useSelector } from \"react-redux\";\nimport { Row, Affix, Alert, Col } from \"antd\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport BodyMessage from \"./BodyMessage\";\nimport HeaderMessage from \"./HeaderMessage\";\n\nconst Wrap = styled(Row)`\n\tflex-direction: column;\n\twidth: 100%;\n`;\n\nconst Message = props => {\n    const {currentRoom} = useSelector((state) => state.roomReducer);\n\treturn (\n\t\t<Wrap justify=\"center\">\n\t\t\t{currentRoom ? (\n\t\t\t\t<>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Affix offsetTop>\n\t\t\t\t\t\t\t<HeaderMessage {...currentRoom} {...props}/>\n\t\t\t\t\t\t</Affix>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<BodyMessage {...currentRoom} />\n\t\t\t\t\t</Col>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<Alert\n\t\t\t\t\tmessage=\"You haven't selected any chat yet.\"\n\t\t\t\t\tshowIcon\n\t\t\t\t\ttype=\"info\"\n\t\t\t\t\tclosable\n\t\t\t\t/>\n\t\t\t)}\n\t\t</Wrap>\n\t);\n};\n\nexport default Message;\n","import {\n\tquery,\n\tcollection,\n\tgetDocs,\n\twhere,\n\tdoc,\n\tonSnapshot,\n\torderBy\n} from \"firebase/firestore\";\nimport { db } from \"../firebase/config\";\n\nexport const getListRoom = async (uid) => {\n\tconst condition = query(\n\t\tcollection(db, \"rooms\"),\n\t\twhere(\"members\", \"array-contains\", uid)\n\t);\n\ttry {\n\t\tlet result = [];\n\t\tconst get = await getDocs(condition);\n\t\tget.forEach((doc) => {\n\t\t\tresult.push(Object.assign(doc.data(), { id: doc.id }));\n\t\t});\n\t\treturn { result, status: true };\n\t} catch (error) {\n\t\treturn { error, status: false };\n\t}\n};\n\nexport const onSnapshotRoom = id => {\n  try {\n    onSnapshot(doc(db, \"rooms\", id), doc => {\n        const result = doc.data()\n      return {result, status: true} \n    })\n  }catch (error){\n    return {status: false}\n  }\n}\n\nexport const getUser = async (keyword) => {\n  if(!keyword) return;\n  const userCollection = collection(db, 'users')\n  try{\n    let result=[]\n    const condition = query(userCollection, where(\"keywords\", \"array-contains\", keyword?.toUpperCase()), orderBy(\"displayName\"))\n    const res = await getDocs(condition)\n    res.forEach(doc => {\n      result.push(doc.data())\n    })\n    return {status:true, result}\n  }catch(error) {\n    console.log(error)\n    return{status:false, error}\n  }\n}\n\nexport const getInfoUser = async id => {\n  try{\n    const q = query(collection(db, \"users\"), where(\"uid\", \"==\", id))\n    let result;\n    const requestGet = await getDocs(q)\n    requestGet.forEach(doc => {\n      result=doc.data()\n    })\n      return{status:true, result}\n  } catch(error) {\n    console.log(error)\n    return{status:false, error}\n  }\n}","import { useEffect } from \"react\";\nimport {Avatar, Alert } from \"antd\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ConversationList, Conversation } from '@chatscope/chat-ui-kit-react';\nimport { onSnapshot, collection } from \"firebase/firestore\";\nimport { db, auth } from \"../../../firebase/config\";\nimport { getListRoom } from \"../../../api/get\";\nimport { setCurrentRoom, setListRoom } from \"../../../redux/slice/roomSlice\";\n\nconst Container = styled.div`\n\tmargin-top: 65px;\n\tposition: relative;\n\theight: 80vh;\n\toverflow: scroll;\n\tpadding: 5px;\n\tborder-top: 2px solid #000;\n\tborder-right: 2px solid #000;\n\t-ms-overflow-style: none; /* IE and Edge */\n\tscrollbar-width: none; /* Firefox */\n\t/* Hide scrollbar for Chrome, Safari and Opera */\n\t&::-webkit-scrollbar {\n\t\tdisplay: none;\n\t}\n\tbutton {\n\t\tposition: absolute;\n\t\tbottom: 20px;\n\t\tright: 10px;\n\t}\n\t.cs-conversation__name, .cs-conversation__info{\n\t   color: ${props => props.theme.theme ? '#000' : '#fff'}\n\t}\n`;\n\nconst Room = (props) => {\n\t//definition\n\tconst dispatch = useDispatch();\n\tconst selectRoom = () => {\n\t\tdispatch(setCurrentRoom(props));\n\t\tif(window.innerWidth < 576){\n\t\t  props.setState(2)\n\t\t}\n\t};\n    //return\n\treturn (\n\t\t<Conversation onClick={selectRoom} name={props.room_name} info={props.description}>\n\t\t\t\t<Avatar as=\"Avatar\" src={props.photoURL} style={{marginRight: \"10px\"}}>\n\t\t\t\t\t{props?.room_name?.charAt(0)?.toUpperCase()}\n\t\t\t\t</Avatar>\n\t\t</Conversation>\n\t);\n};\n\nconst ChatRoom = (props) => {\n\t// definition\n\tconst { roomReducer: {listRoom}, themeReducer } = useSelector((state) => state);\n\tconst dispatch = useDispatch();\n\t//effect\n\tuseEffect(() => {\n\t\tconst func = async () => {\n\t\t\tconst getRooms =\n\t\t\t\tauth.currentUser && (await getListRoom(auth.currentUser.uid));\n\t\t\tgetRooms && dispatch(setListRoom(getRooms.result));\n\t\t};\n\t\tconst subcribe = onSnapshot(collection(db, \"rooms\"), (doc) => {\n\t\t\tfunc();\n\t\t});\n\t\treturn () => subcribe();\n\t}, [dispatch]);\n\t//return\n\treturn (\n\t\t<Container theme={themeReducer}>\n\t\t\t\t<ConversationList>\n\t\t\t{listRoom && listRoom.length ? (\n\t\t\t\tlistRoom.map((listRoom, id) => <Room key={id} {...listRoom} {...props} />)\n\t\t\t) : (\n\t\t\t\t<Alert\n\t\t\t\t  as=\"Conversation\"\n\t\t\t\t\ttype=\"info\"\n\t\t\t\t\tmessage=\"You haven't joined any room yet!\"\n\t\t\t\t\tshowIcon\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t\t</ConversationList>\n\t\t</Container>\n\t);\n};\n\nexport default ChatRoom;\n","import {createSlice} from \"@reduxjs/toolkit\"\n\nconst initialState = {\n  theme: true,\n  light: {\n    background: \"#fff\",\n    color: \"#000\",\n  },\n  dark: {\n    background: \"#00152a\",\n    color: \"#fff\",\n  },\n  loading: false,\n}\n\nconst themeSlice = createSlice({\n  name: \"theme\",\n  initialState,\n  reducers: {\n    setTheme: state => {\n      state.theme = !state.theme\n    },\n    setLoadingTrue: state => {\n      state.loading = true\n    },\n    setLoadingFalse: state => {\n      state.loading = false\n    },\n  }\n})\n\nexport const {setTheme, setLoadingFalse, setLoadingTrue} = themeSlice.actions\nexport default themeSlice.reducer","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport {\n\tSpace,\n\tTypography,\n\tMenu,\n\tRow,\n\tCol,\n\tDropdown,\n\tSwitch,\n\tButton,\n\tTooltip\n} from \"antd\";\nimport Icon, {\n\tMenuOutlined,\n\tSettingOutlined,\n\tCloseOutlined,\n\tFireOutlined,\n\tPlusOutlined\n} from \"@ant-design/icons\";\nimport {useDispatch, useSelector} from \"react-redux\"\nimport { setIsOpenModalTrue } from \"../../../redux/slice/modalSlice\";\nimport { setTheme } from \"../../../redux/slice/themeSlice\";\n\nconst Wrap = styled.div`\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 60px;\n\tpadding: 5px;\n\t.ant-row .ant-col {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t}\n\th1{\n\t  ${props => props.theme.theme ? props.theme.light : props.theme.dark}\n\t}\n`;\n\nconst HeaderNavbar = props => {\n  const theme = useSelector(state => state.themeReducer)\n\treturn (\n\t\t<Wrap theme={theme}>\n\t\t\t<Row justify=\"center\" align=\"center\">\n\t\t\t\t<Col span={4}>\n\t\t\t\t\t<CusDropDown {...props} />\n\t\t\t\t</Col>\n\t\t\t\t<Col span={16}>\n\t\t\t\t\t<center>\n\t\t\t\t\t  <h1>ROOM LIST</h1>\n\t\t\t\t\t</center>\n\t\t\t\t</Col>\n\t\t\t\t<Col span={4}>\n\t\t\t\t  <CreateRoomButton />\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Wrap>\n\t);\n};\n\nconst CreateRoomButton = () => {\n\tconst dispatch = useDispatch();\n\tconst handleAdd = () => {\n\t\tdispatch(setIsOpenModalTrue());\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Tooltip title=\"Create Chat Room\">\n\t\t\t\t<Button\n\t\t\t\t\tshape=\"circle\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\tonClick={handleAdd}\n\t\t\t\t>\n\t\t\t\t\t<PlusOutlined />\n\t\t\t\t</Button>\n\t\t\t</Tooltip>\n\t\t</>\n\t);\n};\n\nconst WrapMenu = styled(Menu)`\n borderRadius: 10px;\n .ant-typography{\n  color: ${props => props.themecus.theme ? '#000' : '#fff'}\n }\n`\n\nconst MenuDrop = props=> {\n  const dispatch = useDispatch()\n  const theme = useSelector(state => state.themeReducer)\n\treturn (\n\t\t<WrapMenu themecus={theme} theme={theme.theme ? \"light\" : \"dark\"}>\n\t\t\t<Menu.Item onClick={() => props.setState(1)} style={{borderRadius: \"10px\"}}>\n\t\t\t\t<Space>\n\t\t\t\t\t<SettingOutlined />\n\t\t\t\t\t<Typography.Text>Setting</Typography.Text>\n\t\t\t\t</Space>\n\t\t\t</Menu.Item>\n\t\t\t<Menu.Item>\n\t\t\t\t<Space>\n\t\t\t\t\t<FireOutlined />\n\t\t\t\t\t<Typography.Text>Dark Mode</Typography.Text>\n\t\t\t\t\t<Switch checked={!theme.theme} onClick={() => {dispatch(setTheme()); props.setIsDisplay(false) }}/>\n\t\t\t\t</Space>\n\t\t\t</Menu.Item>\n\t\t</WrapMenu>\n\t);\n};\n\nconst CusDropDown = props => {\n\tconst [isDisplay, setIsDisplay] = useState(false);\n\treturn (\n\t\t<>\n\t\t\t<Dropdown\n\t\t\t\toverlay={<MenuDrop {...props} setIsDisplay= {setIsDisplay}/>}\n\t\t\t\tplacement=\"bottomRight\"\n\t\t\t\tvisible={isDisplay}\n\t\t\t>\n\t\t\t\t<div>\n\t\t\t\t\t{isDisplay ? (\n\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\tstyle={{ color: \"black\", fontSize: \"30px\" }}\n\t\t\t\t\t\t\tcomponent={CloseOutlined}\n\t\t\t\t\t\t\tonClick={() => setIsDisplay(false)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Icon\n              type=\"black\"\n\t\t\t\t\t\t\tstyle={{ fontSize: \"30px\" }}\n\t\t\t\t\t\t\tcomponent={MenuOutlined}\n\t\t\t\t\t\t\tonClick={() => setIsDisplay(true)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</Dropdown>\n\t\t</>\n\t);\n};\n\nexport default HeaderNavbar;\n","import { useHistory } from \"react-router-dom\";\nimport {\n\tForm,\n\tInput,\n\tRow,\n\tCol,\n\tTypography,\n\tTooltip,\n\tButton,\n\tAvatar,\n} from \"antd\";\nimport { ArrowLeftOutlined, LogoutOutlined } from \"@ant-design/icons\";\nimport styled from \"styled-components\";\nimport { getAuth, signOut } from \"firebase/auth\";\nimport { useSelector } from \"react-redux\";\n\nconst Setting = (props) => {\n\treturn (\n\t\t<>\n\t\t\t<HeaderSetting {...props} />\n\t\t\t<BodySetting />\n\t\t</>\n\t);\n};\n\nconst HeaderSettingWrap = styled(Row)`\n\tbox-shadow: 0 4px 6px -6px #222;\n\tmargin-bottom: 20px;\n\t.ant-typography{ \n\t  margin-left: 20px;\n\t  ${props => props.theme.theme ? props.theme.light : props.theme.dark}\n\t}\n`;\n\nconst HeaderSetting = (props) => {\n  const theme = useSelector(state => state.themeReducer)\n\treturn (\n\t\t<HeaderSettingWrap justify=\"start\" align=\"middle\" theme={theme}>\n\t\t\t<Col>\n\t\t\t\t<Tooltip title=\"Back\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={() => props.setState(0)}\n\t\t\t\t\t\ticon={<ArrowLeftOutlined />}\n\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\tshape=\"circle\"\n\t\t\t\t\t></Button>\n\t\t\t\t</Tooltip>\n\t\t\t</Col>\n\t\t\t<Col>\n\t\t\t\t<Typography.Title level={2}>\n\t\t\t\t\tSettings\n\t\t\t\t</Typography.Title>\n\t\t\t</Col>\n\t\t</HeaderSettingWrap>\n\t);\n};\n\nconst FormBodySetting = (props) => {\n\treturn (\n\t\t<Form\n\t\t\t{...props}\n\t\t\tname=\"form_name\"\n\t\t\tlabelCol={{ span: 4 }}\n\t\t\twrapperCol={{ span: 20 }}\n\t\t>\n\t\t\t<Form.Item\n\t\t\t\tlabel=\"Full Name\"\n\t\t\t\tname=\"username\"\n\t\t\t\trules={[\n\t\t\t\t\t{ require: true, message: \"Please input your username\" },\n\t\t\t\t]}\n\t\t\t>\n\t\t\t\t<Input disabled defaultValue={props.displayName} />\n\t\t\t</Form.Item>\n\t\t\t<Form.Item\n\t\t\t\tlabel=\"Email\"\n\t\t\t\tname=\"email\"\n\t\t\t\trules={[\n\t\t\t\t\t{ require: true, message: \"Please input your username\" },\n\t\t\t\t]}\n\t\t\t>\n\t\t\t\t<Input disabled defaultValue={props.email} />\n\t\t\t</Form.Item>\n\t\t</Form>\n\t);\n};\n\nconst BodySettingWrap = styled.div`\n\tpadding: 5px;\n  .ant-typography, label{\n    ${props => props.theme.theme ? props.theme.light : props.theme.dark}\n  }\n`;\n\nconst BodySetting = () => {\n\tconst history = useHistory();\n\tconst logout = () => {\n\t\tconst auth = getAuth();\n\t\tsignOut(auth).then(() => {\n\t\t\tlocalStorage.clear();\n\t\t\thistory.push(\"/login\");\n\t\t});\n\t};\n\tconst { userReducer, themeReducer } = useSelector((state) => state);\n\tconst { user } = userReducer;\n\treturn (\n\t\t<>\n\t\t\t<BodySettingWrap theme={themeReducer}>\n\t\t\t\t<Row justify=\"center\" align=\"center\">\n\t\t\t\t\t<Avatar size=\"large\" src={user && user.photoURL} >\n\t\t\t\t\t\t{user && user.displayName?.slice(0, 1)?.toUpperCase()}\n\t\t\t\t\t</Avatar>\n\t\t\t\t\t<Typography.Title level={2} style={{ marginLeft: \"10px\" }}>\n\t\t\t\t\t\t{user && user.displayName}\n\t\t\t\t\t</Typography.Title>\n\t\t\t\t</Row>\n\t\t\t\t<FormBodySetting style={{ margin: \"20px 0px\" }} {...user} />\n\t\t\t\t<Row justify=\"center\" style={{ marginTop: \"20px\" }}>\n\t\t\t\t\t<Tooltip title=\"Loggout\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tblock\n\t\t\t\t\t\t\tshape=\"round\"\n\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\tonClick={logout}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<LogoutOutlined /> Loggout\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</Row>\n\t\t\t</BodySettingWrap>\n\t\t</>\n\t);\n};\n\nexport default Setting;\n","import { useState } from \"react\";\nimport ChatRoom from \"./ChatRoom\";\nimport HeaderNavbar from \"./HeaderNavbar\";\nimport Setting from \"./Setting\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport Message from \"../message\"\n\nconst Navbar = () => {\n\tconst [state, setState] = useState(0);\n\treturn (\n\t\t<AnimatePresence exitBeforeEnter>\n\t\t\t{state===1 ? (\n\t\t\t\t<motion.div\n\t\t\t\t\tinitial={{ x: -100 }}\n\t\t\t\t\tanimate={{ x: 0 }}\n\t\t\t\t\tkey=\"modal\"\n\t\t\t\t\texit={{ x: \"-100vw\" }}\n\t\t\t\t>\n\t\t\t\t\t<Setting setState={setState} />\n\t\t\t\t</motion.div>\n\t\t\t) \n\t\t\t: state === 2 ? (\n\t\t\t\t<motion.div\n\t\t\t\t\tinitial={{ x: -100 }}\n\t\t\t\t\tanimate={{ x: 0 }}\n\t\t\t\t\tkey=\"modal\"\n\t\t\t\t\texit={{ x: \"-100vw\" }}\n\t\t\t\t>\n\t\t\t\t\t<Message setState={setState} />\n\t\t\t\t</motion.div>\n\t\t\t)\n\t\t\t:\n\t\t\t(\n\t\t\t\t<motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} >\n\t\t\t\t\t\t<HeaderNavbar setState={setState} />\n\t\t\t\t\t\t<ChatRoom setState = {setState}/>\n\t\t\t\t</motion.div>\n\t\t\t)}\n\t\t</AnimatePresence>\n\t);\n};\n\nexport default Navbar;\n","import { useEffect, useState } from \"react\";\nimport { Row, Col } from \"antd\";\nimport styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\nimport {useSelector} from \"react-redux\";\nimport Message from \"../components/home/message\";\nimport Navbar from \"../components/home/navbar\";\n\nconst Wrap = styled(Row)`\n\theight: 90vh;\n\t${props => props.theme.theme ? props.theme.light : props.theme.dark}\n`;\n\nconst Home = () => {\n\t// set screen for mobile\n\tconst width = window.innerWidth;\n\tconst [isDisplay, setIsDisplay] = useState(true);\n\tif (width < 768) {\n\t\tif (isDisplay) setIsDisplay(false);\n\t}\n  //get theme\n  const theme = useSelector(state => state.themeReducer)\n\t//effect\n\tuseEffect(() => {\n\t\tconst subcribe = window.addEventListener(\"resize\", () => {\n\t\t\tconst wd = window.innerWidth;\n\t\t\tif (wd < 768) {\n\t\t\t\tif (isDisplay) setIsDisplay(false);\n\t\t\t} else {\n\t\t\t\tif (!isDisplay) setIsDisplay(true);\n\t\t\t}\n\t\t});\n\t\treturn subcribe;\n\t}, [isDisplay])\n\t//return\n\treturn (\n\t\t<motion.div\n\t\t\tinitial={{ opacity: 0 }}\n\t\t\tanimate={{ opacity: 1 }}\n\t\t\ttransition={{ duration: 1, delay: 0.5 }}\n\t\t>\n\t\t\t<Wrap justify=\"center\" theme={theme}>\n\t\t\t\t<Col span={24} lg={8} md={10} xxl={6}>\n\t\t\t\t\t<Navbar />\n\t\t\t\t</Col>\n\t\t\t\t{ isDisplay ? (\n\t\t\t\t\t<Col\n\t\t\t\t\t\tspan={24}\n\t\t\t\t\t\tlg={16}\n\t\t\t\t\t\tmd={14}\n\t\t\t\t\t\txxl={18}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Message />\n\t\t\t\t\t</Col>) : '' }\n\t\t\t</Wrap>\n\t\t</motion.div>\n\t);\n};\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/logo.e6ac4b87.png\";","import styled from \"styled-components\";\nimport logo from \"../../assets/logo.png\";\n\nconst Wrap = styled.div`\n\tpadding: 20px;\n\timg {\n\t\twidth: ${(props) =>\n\t\t\tprops.width < 400 ? props.width - 20 + \"px\" : \"387px\"};\n\t}\n`;\n\nconst HeaderLogin = () => {\n\treturn (\n\t\t<Wrap width={window.innerWidth}>\n\t\t\t<center>\n\t\t\t\t<img src={logo} alt=\"logo\" />\n                <h1>LOGIN</h1>\n\t\t\t</center>\n\t\t</Wrap>\n\t);\n};\n\nexport default HeaderLogin;\n","export default __webpack_public_path__ + \"static/media/author.48cafb7b.gif\";","import { useHistory} from \"react-router-dom\";\nimport { Button, Space } from \"antd\";\nimport { GoogleOutlined, FacebookFilled } from \"@ant-design/icons\";\nimport styled from \"styled-components\";\nimport { signInWithPopup, FacebookAuthProvider } from \"firebase/auth\";\nimport { useDispatch} from \"react-redux\";\nimport { auth } from \"../../firebase/config\";\nimport author from \"../../assets/author.gif\";\nimport { insertUser } from \"../../api/insert\";\nimport { setLoadingTrue, setLoadingFalse } from \"../../redux/slice/themeSlice\";\n\nconst Wrap = styled.div`\n\tpadding: 10px;\n`;\n\nconst LoginButton = () => {\n\tconst history = useHistory();\n\tconst dispatch = useDispatch();\n\tconst handleFbButton = async () => {\n\t  dispatch(setLoadingTrue())\n\t\tconst fbProvider = new FacebookAuthProvider();\n\t\ttry{\n\t\t  const res = await signInWithPopup(auth, fbProvider)\n\t\t  console.log(res)\n\t\t  const createdAt = res.user.metadata.createdAt *1\n\t\t  const lastLoginAt = res.user.metadata.lastLoginAt *1\n\t\t\t  if(lastLoginAt - createdAt <= 1000){\n\t\t\t    await insertUser()\n\t\t\t  }\n\t      dispatch(setLoadingFalse())\n\t\t\t\treturn history.push(\"/home\");\n\t\t\t} catch(err){\n\t    dispatch(setLoadingFalse())\n\t\t\talert(\"Error!\")\n\t\t\t}\n\t};\n\treturn (\n\t\t<>\n\t\t\t<Wrap>\n\t\t\t\t<center>\n\t\t\t\t\t<Space align=\"end\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tshape=\"round\"\n\t\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\t\tghost\n\t\t\t\t\t\t\ticon={<GoogleOutlined />}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tGoogle\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={handleFbButton}\n\t\t\t\t\t\t\tshape=\"round\"\n\t\t\t\t\t\t\tdanger\n\t\t\t\t\t\t\ttype=\"ghost\"\n\t\t\t\t\t\t\ticon={<FacebookFilled />}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tFacebook\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Space>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tDesign by <img src={author} alt=\"author\" />\n\t\t\t\t\t</div>\n\t\t\t\t</center>\n\t\t\t</Wrap>\n\t\t</>\n\t);\n};\n\nexport default LoginButton;","import { onAuthStateChanged } from \"firebase/auth\";\nimport { useLayoutEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Route } from \"react-router-dom\";\nimport { auth } from \"../firebase/config\";\nimport Home from \"../pages/Home\";\nimport Login from \"../pages/Login\";\n\nconst routesArray = [\n\t{ path: \"/home\", component: Home },\n\t{ path: \"/login\", component: Login },\n];\n\nconst Routes = () => {\n\tconst history = useHistory();\n\tuseLayoutEffect(() => {\n\t\tonAuthStateChanged(auth, (res) => {\n\t\t\tif (res) {\n\t\t\t\treturn history.push(\"/home\");\n\t\t\t}\n\t\t});\n\t}, [history]);\n\treturn (\n\t\t<>\n\t\t\t{routesArray.map((res) => (\n\t\t\t\t<Route\n\t\t\t\t\tkey={res.path}\n\t\t\t\t\texact\n\t\t\t\t\tpath={res.path}\n\t\t\t\t\tcomponent={res.component}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</>\n\t);\n};\n\nexport default Routes;\n","import HeaderLogin from '../components/login/HeaderLogin';\nimport LoginButton from '../components/login/LoginButton';\n\nconst Login = () => {\n    return (\n        <>\n            <HeaderLogin />\n            <LoginButton />\n        </>\n    )\n}\n\nexport default Login","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    user: null,\n    isLogin: false\n}\n\nconst userSlice = createSlice({\n    name: \"user\",\n    initialState,\n    reducers: {\n        setIsLoginTrue: (state, payload) => {\n            state.user = payload.payload\n            state.isLogin = true\n        },\n        setIsLoginFalse: state => {\n            state.user = null\n            state.isLogin = false\n        },\n    }\n})\n\nexport const { setIsLoginFalse, setIsLoginTrue} = userSlice.actions\nexport default userSlice.reducer","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    currentMessage: []\n}\n\nconst messageSlice = createSlice({\n    name: \"message\",\n    initialState,\n    reducers: {\n        \"setMessage\": (state, payload) => {\n            state.currentMessage = payload.payload\n        },\n        \"resetMessage\": state => {\n            state.currentMessage = []\n        }\n    }\n})\n\nexport const {setMessage, resetMessage} = messageSlice.actions\nexport default messageSlice.reducer","import { combineReducers } from \"redux\";\nimport userReducer from \"./slice/userSlice\";\nimport modalReducer from \"./slice/modalSlice\";\nimport roomReducer from \"./slice/roomSlice\";\nimport themeReducer from \"./slice/themeSlice\";\nimport messageReducer from \"./slice/messageSlice\"\n\nconst rootReducer = combineReducers({\n\tuserReducer,\n\tmodalReducer,\n\troomReducer,\n\tthemeReducer,\n  messageReducer,\n});\n\nexport default rootReducer;\n","import rootReducer from \"./rootReducer\";\nimport { configureStore } from \"@reduxjs/toolkit\";\n//import thunk from \"redux-thunk\";\n\nconst store = configureStore({\n    reducer: rootReducer,\n    //middleware: [thunk]\n});\n\nexport { store };","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Modal, Form, Input, notification } from \"antd\";\nimport { setIsOpenModalFalse } from \"../../../redux/slice/modalSlice\";\nimport {insertRoom} from \"../../../api/insert\"\nimport styled from \"styled-components\"\n\nconst ModalWrap= styled(Modal)`\n  .ant-modal{\n    &-content, &-header, label, h2{\n      ${props => props.theme.theme ? props.theme.light : props.theme.dark}\n    }\n  }\n  label, h2{\n      ${props => props.theme.theme ? props.theme.light : props.theme.dark}\n    }\n`\n\nconst CreateRoomModal = () => {\n\tconst dispatch = useDispatch();\n\tconst {modalReducer: {isOpen}, themeReducer} = useSelector((state) => state);\n\tconst [form] = Form.useForm();\n\tconst [loading, setLoading] = useState(false);\n\n\tconst onCancel = () => {\n\t\tdispatch(setIsOpenModalFalse());\n\t};\n\tconst onOk = async () => {\n    setLoading(true);\n\t\tconst data = form.getFieldValue();\n\t\tif(!data.room_name || !data.description){\n      dispatch(setIsOpenModalFalse());\n      notification[\"warning\"]({\n        message: \"WARNING!\",\n        description: \"Room name or description rooms invalid!\"\n      })\n\t\t  return;\n\t\t}\n    const re = await insertRoom({...data})\n\n    if(re.status){\n      notification[\"success\"]({\n        message: \"Create successfully!\",\n        description: \"Happy fund!\"\n      })\n    }else{\n      notification[\"error\"]({\n        message: \"Error!\",\n        description: \"Try again!\"\n      })\n    }\n    dispatch(setIsOpenModalFalse());\n};\n\treturn (\n\t\t<ModalWrap\n\t\t  theme={themeReducer}\n\t\t\tvisible={isOpen}\n\t\t\tonCancel={onCancel}\n\t\t\ttitle={\n\t\t\t\t<center>\n\t\t\t\t\t<h2>Create New Room</h2>\n\t\t\t\t</center>\n\t\t\t}\n\t\t\tonOk={onOk}\n      confirmLoading={loading}\n\t\t>\n\t\t\t<Form form={form}>\n\t\t\t\t<Form.Item\n\t\t\t\t\tname=\"room_name\"\n\t\t\t\t\tlabel=\"Name\"\n\t\t\t\t\tlabelCol={{ span: 4 }}\n\t\t\t\t\trules={[{ required: true }]}\n\t\t\t\t>\n\t\t\t\t\t<Input placeholder=\"Enter your room name... \" />\n\t\t\t\t</Form.Item>\n\t\t\t\t<Form.Item\n\t\t\t\t\tname=\"description\"\n\t\t\t\t\tlabel=\"Description\"\n\t\t\t\t\tlabelCol={{ span: 4 }}\n\t\t\t\t\trules={[{ required: true }]}\n\t\t\t\t>\n\t\t\t\t\t<Input.TextArea placeholder=\"Description...\" />\n\t\t\t\t</Form.Item>\n\t\t\t</Form>\n\t\t</ModalWrap>\n\t);\n};\n\nexport default CreateRoomModal;\n","import {\n  doc,\n  updateDoc\n} from \"firebase/firestore\";\nimport {\n  db\n} from \"../firebase/config\";\nimport {\n  getInfoUser\n} from \"./get\"\n\nexport const updateMessage = async (title, payload) => {\n  const roomRef = doc(db, \"rooms\", payload.id);\n  const mess = {\n    title,\n    created_at: new Date(),\n    infoMember: payload.user,\n  }\n  try {\n    await updateDoc(roomRef, {\n      messages: payload.messages.concat(JSON.stringify(mess))\n    })\n    return {\n      status: true\n    }\n  } catch (error) {\n    return {\n      status: false\n    }\n  }\n};\n\nexport const updateMember = async (memberNew, currentRoom) => {\n  let status = 1\n  const setStatus = val => status = val\n  const infoMemberOld = Array.from(currentRoom.info_member)\n  const memberOld = Array.from(currentRoom.members)\n  memberNew.forEach(async id => {\n    if (memberOld.indexOf(id) !== -1) {\n      setStatus(2)\n      return\n    }\n    const res = await getInfoUser(id)\n    if (res.status) {\n      const infoUser = res.result\n      infoMemberOld.push({\n        infoUser: {\n          displayName: infoUser.displayName,\n          email: infoUser.email,\n          uid: infoUser.uid,\n          photoURL: infoUser.photoURL,\n          phoneNumber: infoUser.phoneNumber,\n        }})\n      memberOld.push(id)\n      try {\n        await updateDoc(doc(db, \"rooms\", currentRoom.id), {\n          info_member: infoMemberOld,\n          members: memberOld\n        })\n        return\n      } catch (error) {\n        console.log(error)\n        setStatus(0)\n        return\n      }\n    } else {\n      setStatus(0)\n      return;\n    }\n  })\n  return {\n    status\n  }\n}","import {\n  useState,\n  useCallback\n} from \"react\";\nimport {\n  useSelector,\n  useDispatch\n} from \"react-redux\";\nimport {\n  Modal,\n  Empty,\n  Avatar,\n  notification,\n  Select,\n  Spin\n} from \"antd\";\nimport {\n  setIsOpenInviteFalse\n} from \"../../../redux/slice/modalSlice\";\nimport {\n  getUser\n} from \"../../../api/get\";\nimport {\n  updateMember\n} from \"../../../api/update\";\nimport debounce from \"lodash/debounce\";\nimport styled from \"styled-components\"\n\nconst ModalWrap= styled(Modal)`\n  .ant-modal{\n    &-content, &-header, label, h2{\n      ${props => props.theme.theme ? props.theme.light : props.theme.dark}\n    }\n  }\n  label, h2{\n      ${props => props.theme.theme ? props.theme.light : props.theme.dark}\n    }\n`\n\nconst InviteModal = () => {\n  //defination\n  const [state,\n    setState] = useState({\n      loading: false,\n      data: [],\n      value: ''\n    })\n  const [userValue,\n    setUserValue] = useState('')\n  const dispatch = useDispatch();\n  const {\n    modalReducer,\n    roomReducer,\n    themeReducer\n  } = useSelector((state) => state)\n\n  // handle search\n  const debounceFunc = useCallback(debounce(async value => {\n    const result = await getUser(value)\n    if (result.status) {\n      let resultArr = []\n      result.result.forEach(res => {\n        resultArr.push({\n          label: <> < Avatar src = {\n            res.photoURL\n          } style = {{\n              marginRight: \"10px\"\n            }} >\n          {\n            res?.displayName?.charAt(0)?.toUpperCase()} < /Avatar>\n          {\n            res.displayName\n          } < />,\n          value: res.uid,\n        })\n      })\n      setState({\n        ...state,\n        loading: false,\n        data: resultArr,\n      })\n    }\n  },\n    1500), [])\n\n  const handleSearch = value => {\n    setState({\n      ...state,\n      value\n    })\n    if (!value) return;\n    if (!state.loading) setState({\n      data: [], loading: true\n    })\n    debounceFunc(value.trim())\n  }\n\n  const handleBlur = () => {\n    setState({\n      loading: false,\n      data: [],\n      value: ''\n    })\n  }\n\n  // handle cancel and ok\n  const onCancel = () => {\n    dispatch(setIsOpenInviteFalse());\n  };\n  \n  const onOk = async () => {\n    if (!userValue) return\n    const result = await updateMember(userValue, roomReducer.currentRoom)\n      notification[result.status === 1 ? \"success\" : \"error\"]({\n        message: result.status === 1 ? \"SUCCESS!\" : \"ERROR!\",\n        description:  result.status ===1 ? \"Invited successfully!\" : result.status ===2 ? \"Member was in room\" : \"Error\"\n      })\n    dispatch(setIsOpenInviteFalse());\n  };\n  return ( <ModalWrap\n    theme={themeReducer}\n    visible = {\n      modalReducer.isOpenInvite\n    }\n    onCancel = {\n      onCancel\n    }\n    title = { < center > < h2 > Invite Friend < /h2> < /center>\n    }\n    onOk = {\n      onOk\n    } > < Select\n    mode = \"multiple\"\n    onBlur = {\n      handleBlur\n    }\n    allowClear\n    style = {{\n      width: '100%'\n    }}\n    placeholder = \"Enter your friend name...\"\n    onChange = {\n      value => setUserValue(value)}\n    onSearch = {\n      handleSearch\n    }\n    searchValue = {\n      state.value\n    }\n    notFoundContent = {\n      state.loading ? < center><Spin size = \"large\" /></center> : <Empty/ >\n    }\n    options = {\n      state.data\n    }\n    /> < /ModalWrap>\n  );\n};\n\nexport default InviteModal;","import { useSelector } from \"react-redux\";\nimport CreateRoomModal from \"./CreateRoomModal\";\nimport InviteModal from \"./InviteModal\";\n\nconst RootModal = () => {\n\tconst {modalReducer} = useSelector((state) => state);\n\treturn (\n\t  <>\n    \t{modalReducer.isOpen && <CreateRoomModal />}\n    \t{modalReducer.isOpenInvite && <InviteModal />}\n  \t</>)\n};\n\nexport default RootModal;\n","import styled from \"styled-components\";\n\nconst LoadingStyled = styled.div`\n\twidth: 100vw;\n\theight: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items:center;\n\t.loader {\n\t\twidth: 100px;\n\t\theight: 75px;\n\t\tmargin: 0 auto;\n\t\tbackground: #E4E9BE;\n\t\tposition: relative;\n\t\tborder-radius: 100%;\n\t}\n\t.loader:before {\n\t\tcontent: \"\";\n\t\tposition: absolute;\n\t\tbox-sizing: border-box;\n\t\tborder: 15px solid transparent;\n\t\tborder-top: 25px solid #E4E9BE;\n\t\ttransform: rotate(45deg);\n\t\ttop: 50px;\n\t\tleft: -15px;\n\t}\n\n\t.loader:after {\n\t\tcontent: \"\";\n\t\twidth: 12px;\n\t\theight: 12px;\n\t\tposition: absolute;\n\t\tleft: 50%;\n\t\ttop: 50%;\n\t\ttransform: translate(-50%, -50%);\n\t\tborder-radius: 50%;\n\t\tbackground-color: #ff3d00;\n\t\tbox-shadow: 20px 0 #ff3d00, -20px 0 #ff3d00;\n\t\tanimation: flash 0.5s ease-out infinite alternate;\n\t}\n\n\t@keyframes flash {\n\t\t0% {\n\t\t\tbackground-color: rgba(255, 60, 0, 0.25);\n\t\t\tbox-shadow: 20px 0 rgba(255, 60, 0, 0.25), -20px 0 #ff3d00;\n\t\t}\n\t\t50% {\n\t\t\tbackground-color: #ff3d00;\n\t\t\tbox-shadow: 20px 0 rgba(255, 60, 0, 0.25),\n\t\t\t\t-20px 0 rgba(255, 60, 0, 0.25);\n\t\t}\n\t\t100% {\n\t\t\tbackground-color: rgba(255, 60, 0, 0.25);\n\t\t\tbox-shadow: 20px 0 #ff3d00, -20px 0 rgba(255, 60, 0, 0.25);\n\t\t}\n\t}\n`;\n\nconst Loading = () => {\n\treturn (\n\t\t<LoadingStyled>\n\t\t\t<span className=\"loader\"></span>\n\t\t</LoadingStyled>\n\t);\n};\n\nexport default Loading;\n","import { useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, useHistory } from \"react-router-dom\";\nimport Routes from \"./routes\";\nimport { Provider, useDispatch, useSelector } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport RootModal from \"./components/common/modal/RootModal\";\nimport { auth } from \"./firebase/config\";\nimport \"./App.css\";\nimport \"antd/dist/antd.css\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { setIsLoginFalse, setIsLoginTrue } from \"./redux/slice/userSlice\";\nimport Loading from \"./components/common/Loading\";\nimport { getListRoom } from \"./api/get\";\nimport { resetRoom, setListRoom } from \"./redux/slice/roomSlice\";\nimport { setLoadingFalse, setLoadingTrue } from \"./redux/slice/themeSlice\";\nimport styled from \"styled-components\"\n\nconst WrapContainer = styled.div`\n`\n\nconst Container = () => {\n\t//definition\n\tconst history = useHistory();\n\tconst dispatch = useDispatch();\n\tconst {loading} = useSelector(state=>state.themeReducer)\n    //useEffect\n\tuseEffect(() => {\n\t\tconst subcribe = onAuthStateChanged(auth, (res) => {\n\t\t\tdispatch(setLoadingTrue());\n\t\t\tif (res) {\n        //get list user room\n\t\t\t\tconst listUser  = async () => {\n\t\t\t\t\tconst a = await getListRoom(res.uid);\n\t\t\t\t\tdispatch(setListRoom(a.result))\n\t\t\t\t}\n        listUser()\n        //set state login and user\n\t\t\t\tdispatch(setIsLoginTrue(res));\n\t\t\t  dispatch(setLoadingFalse());\n\t\t\t\treturn history.push(\"/home\");\n\t\t\t} else {\n          dispatch(setIsLoginFalse())\n          dispatch(resetRoom())\n\t\t\t    dispatch(setLoadingFalse());\n\t\t\t\treturn history.push(\"login\");\n\t\t\t}\n\t\t});\n\t\treturn subcribe;\n\t}, [history, dispatch]);\n\treturn <>{!loading ? <WrapContainer> <Routes/> </WrapContainer> : <Loading />}</>;\n};\n\nfunction App() {\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<Router basename={window.location.pathname || ''}>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Container />\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t\t<RootModal />\n\t\t</Provider>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport '@chatscope/chat-ui-kit-styles/dist/default/styles.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}